<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="guna2ShadowForm1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>140, 17</value>
  </metadata>
</root>